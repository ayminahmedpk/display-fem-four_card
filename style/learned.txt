

Figma and letter spacing:

    Figma can have letter-spacing as % values,
    and the % is calculated based on the font-size.

    However, in the browser (at least in Chrome), % values are invalid.
    Use em instead.

    So 0.05% in Figma becomes 0.005em in CSS.



Vertically centering using margin auto (issues):

    "In fact, the nature of document flow and element height calculation
     algorithms make it impossible to use margins for centering an element
     vertically inside its parent. Whenever a vertical margin's value is
     changed, it will trigger a parent element height re-calculation (re-flow),
     which would in turn trigger a re-center of the original element... making
     it an infinite loop."

    Basically, can't use margin-top: auto to vertically center an element. We
    are recommended by stackoverlow to use flexbox or positioning instead.
    
    Simply changing the parent container to "display : flex;" will magically
    make it apply margin-top: auto; or margin-bot: auto; the way you expect it
    to.


Border size and internal spacing:

    Yes, border-box makes it such that the border is added to the inside of the
    box, without increasing its total height.

    However, the border is a separate entity from the box's inner content (even
    its padding), so it will push everything inside the box further back.

    So a border top of 4px will push everything in the box lower by 4px,
    effectively increasing the top padding by 4px.

    Keep that in mind when setting a container's padding and inner content's
    margin-top.


Box shadow:

    Properties:
        inset              : (whether the shadow is cast by the box, or on it)
        x-offset, y-offest : the x / y position of the shadow box (can be -ve)
        blur               : distance of blur from edges of shadow box
        spread             : size (increased or decreased) of shadow box
        color              : typical color field, can use rgba for opacity too

    Note:
        Can have multiple shadows by
            box-shadow: ....... ,
                        ....... ,
                        ....... ;
        Multiple box-shadow properties will have the latest one override the
        earlier one, as CSS is supposed to do. So for multiple shadows, just
        use the above comma separated method.

    Trick - multiple borders:
        Shadows do not affect the box model, so we can give a box multiple
        "borders" by giving it multile Shadows (shadow boxes) of higher spread
        and no blur- without affecting other elements. Just watchout for
        overlapping content, whether outside or inside if using inset.


Figma -> Development:
    
    Go SECTION BY SECTION.

    Don't get ahead of yourself to tackle the trickier parts first.
    
    The hacks needed for positioning and container dimensions, etc. just to lay
    the targeted content on the image are NOT worth it. That alone takes hours,
    and complicates your code to the point where you don't know what is for
    the design and what is for the temporary alignment.

    Skip this nonsense. Go section by section.

    UNLESS, unless you are willing to unlock the image layer in Pixel Perfect
    and then work accordingly.

    But it's best to just avoid this step altogether and go section by section.

    Any markup changes later will usually have a localized effect, without
    affecting the content in the prior sections.

    And when that change affects the previously perfected layouts, you can then
    harden those layouts on an incremental basis.

    This is just the normal process. This is how your code gradually grows to
    its final version. Don't try to shortcut it.

    Go section by section.